#!/usr/bin/env bash
ROOTDIR=$(echo $(cd $(dirname $0) && pwd) | sed 's/\/tools\/script//g')
CURRENTDIR=$(dirname $0)

source $ROOTDIR/build/init.sh

# User configs
SRC_ROOT=/work/
VPS_SRC_ROOT=/work/ASUS/wildbook
LOCALPATH=$(pwd)
#CURRENTFILE=`$0`



# command cd	<Project>
function switchProjects()
{
    echo "cd /work/$1"
    $(cd /work/;pwd)
}

# command make	<Project>
#=============		编译
function MakeProjects()
{
    echo "zore"
}

# command Repo <Project>
#=============		push
function Repo()
{
    #下代码
    #更新代码
    #
    case $1 in

    sku1)
        cd ${SRC_ROOT}/sku1
        ;;
    sku2-4)
        cd ${SRC_ROOT}/sku2-4
        ;;
    sku5)
        cd ${SRC_ROOT}/sku5
        ;;
    sku6-8)
        cd ${SRC_ROOT}/sku6-8
        ;;
    sku9-12)
        cd ${SRC_ROOT}/sku9-12
        ;;
    *) WARN "Don't have this choise!"
    esac

    INFO "repo sync -c --no-tags"
    repo sync -c --no-tags  -j8
}

# command Gitpush	<Project>
#=============		push
function GitPush() {
    case $1 in

    # flash aboot
    sku1)
        NAME="sku1-ZC600KL-dev"
        ;;
    sku1p)
        NAME="pie_sku1_ZC600KL_dev_bsp"
        ;;
    sku2-4)
        NAME="sku2-4-ZD553KL-dev"
        ;;
    sku5)
        NAME="sku5-ZC553KL-dev"
        ;;
    sku6-8)
        NAME="sku6-8-ZC554KL-dev"
        ;;
    sku9-12)
        NAME="sku9-12-ZC520KL-dev"
        ;;
    app)
        NAME="asus_app_dev"
        ;;
    tina)
        NAME="Tina_DriverOnly"
        ;;
    *) WARN "Don't have this choise!"
    esac

    INFO "git push origin HEAD:refs/for/${NAME}"
    git push origin HEAD:refs/for/${NAME}
}

# command flash	<Project>
#=============		刷机
function FlashImages()
{

    # 1. 判断是否为fastboot模式
    # adb devices
    # 2. 循环刷机
    # 3. 重启系统

    local ImageLists=$*
    local FASTSTATUS=$(adb devices)
    #echo ==${FASTSTATUS}=
    #echo ==${FASTSTATUS:24:9}==
    if [ ! -z ${FASTSTATUS:24:9} ]; then
        INFO "adb reboot bootloader"
        sudo "archermind" | sudo -S adb reboot bootloader
        sleep 5 #延时5s
    fi

    local FASTSTATUS=$(echo "archermind" | sudo -S fastboot devices)
    #echo ==${FASTSTATUS}=
    #echo ==${FASTSTATUS:0:9}==
    if [ -z ${FASTSTATUS:0:9} ]; then
        ERROR "\nPlease in fastboot mode"
        exit
    fi

    if [ -z $ANDROID_PRODUCT_OUT ]; then
        INFO "\nDo you want to use default \"\$ANDROID_PRODUCT_OUT\"(y/n) ?"
        read x
        if [ "$x" == "y" ] || [ "$x" == "Y" ];then
            ANDROID_PRODUCT_OUT="/work/temp"
        else
            exit
        fi
    fi

    local CMD
    for Image in $ImageLists
    do

        if [ "-" == ${Image:0:1} ]; then
            continue
        fi

        # Flash Image
        if [ "aboot" == $Image ]; then
            CMD="sudo fastboot flash aboot $ANDROID_PRODUCT_OUT/emmc_appsboot.mbn"
        else
            CMD="sudo fastboot flash $Image $ANDROID_PRODUCT_OUT/$Image.img"
        fi
        INFO "$CMD"
        $($CMD)
    done
    spd-say "download ok"
    INFO "\nAll is download,do you want to reboot(y/n) ?"
    read x
    if [ "$x" == "y" ] || [ "$x" == "Y" ];then
        sudo fastboot reboot
    fi
}

#=============		远程登录
function ssh-login()
{
    case $1 in
    ##	firm ##
    [1-9]*)
        NAME="archermind@10.20.11.$1"
         ;;
    chunhua|192)
        NAME=root@10.20.11.192 #111
        ;;
    youcun)
        NAME=archermind@10.20.11.21
        ;;
    songpeng)
        NAME=archermind@10.20.11.114
        ;;
    zhanglei)
        NAME=archermind@10.20.11.79
        ;;
    yanhua)
        NAME=archermind@10.20.11.23
        ;;
    fanjun)
        NAME=archermind@10.20.11.73
        ;;

    ##	firm server ##
    main)
        NAME=archermind@10.20.11.11
        ;;
    gitweb|93)
        NAME=archermind@10.20.11.93
        ;;

    ##	me ##
    vps)
        NAME="-p 28556 wildbook@184.170.212.253"
        ;;
    vps1)
        NAME="-p 28556 root@184.170.212.253"
        ;;
    *) ERROR "ssh-login() Don't have this choise!"
    esac

    INFO "ssh $NAME"
    ssh $NAME
}


# work -c sname src dest (copy to server)
# work -c cname src dest (copy to local)
function scp-server()
{
    local CMD NAME
    local src=$2
    local dest=$3

    case ${1:1} in
    ##	firm ##
    [1-9]*)
        NAME=archermind@10.20.11.$1
        ;;
    sunqian)
        NAME=archermind@10.20.11.51
        ;;
    youcun)
        NAME=archermind@10.20.11.21
        ;;
    songpeng)
        NAME=archermind@10.20.11.114
        ;;
    zhanglei)
        NAME=archermind@10.20.11.79
        ;;
    yanhua)
        NAME=archermind@10.20.11.23
        ;;
    fanjun)
        NAME=archermind@10.20.11.73
        ;;
    haifeng)
        NAME=archermind@10.20.11.80
        ;;
    hongchang)
        NAME=archermind@10.20.11.197
        ;;

    ##	firm server ##
    main)
        NAME=archermind@10.20.11.11
        ;;
    main0)
        NAME=archermind@10.20.11.10
        ;;

    ##	me ##
    vps)
        NAME="-p 28556 root@184.170.212.253"
        NAME="-P 28556 wildbook@184.170.212.253"
        ;;
    vps1)
        NAME="-p 28556 root@184.170.212.253"
        NAME="-P 28556 root@184.170.212.253"
        ;;
    *) ERROR "scp-server() Don't have this choise!"
    esac

    INFO "ssh $NAME"
    ssh $NAME
    if [ "s" == ${1:0:1} ]; then
        CMD="scp -r $src $NAME:$dest"
    else
        CMD="scp -r $NAME:$src $dest"
    fi

    INFO "$CMD"
    $($CMD)
}
 
 

function WifiAdbConnect()
{
    adb root
    adb remount
    adb tcpip 5555
    sleep 2
    adb connect $1
}

#=============		help
function Usages()
{
    echo -e  "
    Usage: work [OPTION]... [URL]...

    -V,  --version           display the version of Wget and exit.
    -h,  --help              print this help.
    -s name     ssh
    -c          work -c sserver src dest (copy to server)
                work -c cserver src dest (copy to local)
    -f image    fastboot flash
    -p name     git push origin HEAD:refs/for/${NAME}
    -a          adb connect on wifi"

}


while getopts "hs:c:f:p:a:t" OPTION; do
    case $OPTION in

    h)
        Usages
        ;;
    s)
        ssh-login $OPTARG
        ;;
    c)
        scp-server $2 $3 $4
        ;;
    f)
        FlashImages $*
        ;;
    p)
        GitPush $OPTARG
        ;;
    a)
        WifiAdbConnect $OPTARG
        ;;
    t)
        Test
        ;;
    *)
        Usages
        ;;
    ?)
        echo "ssh"
        ;;

    esac
done
